



Where to detect hits?

1) entity has list of effects currently affecting it and amount of HP
2) weapon has list of effects it applies
3) effect is not defined... how should it interact with entity it is attached to?
4) effect has priority, and they are sorted in priority order?
5) 


should weapons have effects (which affect the weapon itself) - may be

so when weapon hits entity:
1) we make damage object - {base: 10, modifier: +30%, effects: []}
2) pass (or rather drag) it trough character effects, then weapon effects
3) send damage to entity
4) entity passes it through its effects (don't touch weapon i guess)
5) finally, damage is applied, effects are added to entity's list	

this is kinda done, but i never tested effects:)


force registry:
1) you can have multiple forces
2) you are allies if you have any force in common
3) if you have no force, you are a teapot, not an enemy,.,,.,.,


LEVELS
1) how should they work???
2) lets generate!
3) ok, i pass list enemies, than their counts


multiplayer!
1) it is quite easy to set up, but i suspect it will work badly by default
2) may be need some more gameplay to actually test it..

force registry is autoload (Todo) or not? you do not need in main menu... <- for now, not
need to separate input from movement? or may be it is fine (cheating doesn't exist)

need to pass player id to player node... but i tried to remove multiplayer logic from level loader (it is there anyway now).

how do i set seed??? i need to sync it! and i mustn't generate level before it is set... - fixed


bugs: there is a boar that does nothing and cannot be damaged + only one player syncs (always one on the right!)...

I thought of syncing boar destination point, not position. 
However it won't work, because if destination is not immediatly synced, position will be off and error will grow with time.
It can be preferable to use low-freq syncs for both destination and position, calculating current position on client.
Simply syncing position will do for now, but i thoght that this was valuable example.

forces should be calculated only on server, actually, no you need to be able to read/check enemies from client.
NOTE: think about client/server logic separation main purpose as working synchronization.

All is looking good!
one question: how do i spawn interconnected entities in multiplayer, and use m.synchronisers (the seem to not work if the thing isn't spawned with m.spawner)?
ok so i figured it out!
1) have m.spawner in character
2) save character weapon in GameManager.Players
3) spawn character on server - it spawns everywhere
4) spawn weapon (you know which one) for this character on server - it spawns everywhere
welll... i was wrong, remember to disable things that can override syncs!

I want to make level system. Where do i start?
I guess i want to make walkable 'dungeon'. 
so you can go to portal/door/whatever, teleport to level, fight with mobs, collect rewards, go to next chamber.
todo list:
	+ level system
	+ doors (portals actually) to teleport between levels
	(1/2) couple of levels to go through
	+ ui for health and money + storing it in Players dict
	+ level logic: spawn player, wait until they or all foes are dead, teleport back or give rewards, let to go to next level
	(base_level supports it, don't need it at the moment) more level logic: spawn waves of monsters
	+ player death logic
	+ rewards: health/money to begin with

I understood something! If godot devs did a decent job, m.spawners are ultimate thing!
You can store players data not in dict, but simply as children of auto loaded node, synced by m.spawner and m.synchronizers!
how new player is added:
	1) they add playerinfo to GameManager - everybody knows he exists
	2) they spawn in lobby and do they thing
	3) something needs to spawn player body for them when they enter playable areas...
	
need to think of the global scene structure
root:
	GameManager (or meta storage?):
		PlayerInfos...
	LevelLoader (or level manager?):
		Level1:
			Terrain, Obstacles
			Interactables
			ForceRegistry:
				CombatCharacters...
		Level2:... (on server, clients may render only their levels (in future?))
	[May be] LevelArchive (name -> scene path)

how portal works:
player activates it -> call is sent to server
portal knows it's current level, it says it to remove character from tree
portal somehow creates level node (or finds it in existing ones), than sends it to LevelLoader
portal calls LevelLoader.MovePlayer(player, level)!

probably moving player is optimization, we need to create it from the botttom up.

how to spawn rewards? i kinda want to generalize it... but who cares

what to do with dead player? 
I feel like I need to make some goals or there will be too much question i don't like to deal with...


Alright, we need a new goal!
Next step is to have somewhat playable experience... 
1) have weapon upgrades and visual indicators that they work (like damage numbers!) - done
2) do not loose multiplayer workability for too long! - lost it with shop :( - fixed, boo
3+-) multiple levels, enemies applying effects (like stun or something) - no enemies, but copy pasting levels is easy now
4+) shop with upgrades! - done

levels:
	1) starting area, do nothing
	2-n) level with boars, spawn random reward
	random) shop
	n) boss (guess, who?) GIANT BOOOAAARRR
	n+1) credits, beautiful music, don't forget 'thank YOU for playing!'

ideas for upgrades:
	- freeze - simple, really
	- +dmg +health +money - BASED
	- fire? with burn damage, bonus points if you get resonance going:)
	
what is upgrade?
Hades: if you take it you have a choice between multiple upgrades, you know their element (their group)
or: you can see everything about it, and just decide to buy it or not
1) if you receive upgrade as reward for each level you need to have some choice - good point
2) we need to make choice of next room insteresting - so making choice between *groups* of upgrades helps
3) i like hades. 

is upgrade an effect?
are there effects which should apply to respawned character?
i guess effects work in battle and upgrades are persistent. 

we need to discuss how to do shadows. I guess I need to add half-transparent 
color to pallete, and paint them for all sprites.

Apparently not-dynamic objects aren't deleted by m.spawner https://github.com/godotengine/godot/issues/74327
bugger. Pre-determined shop won't sync for this reason.

How to make scenarios? (Some high level idea of sequence of levels)
may be make scenario manager? and in level you notify it about level end

I have an idea about a scenario: map is a grid of cells, each cell is a level (with foes and reward)
you go in it however you want to adjacent cells (some connections can be blocked)
you need to go to the centre, but you usually want to get as many rewards as possible
Of course, other players are spawned on the same map, and you can fight if you 
meet, except center chamber (probably). We also need to protect weaker players somehow...
I decided to go with my scenarios a bit further, and do not bother with idea above for some time


some thoughts:
	1) i need upgrade interactable to put into shop inventory
	2) i want to spawn interactable, which 
	3) yeah i got it... REMINDER: write thoughts down, it helps

TODO: interactable captions (quite simple, really)

ok, effects! let's do frost to begin with
1) it should be indicated near the health bar -> i did color modulate of player, think it's ok for now
2) should somehow slow down characters... => we need to make speed_modifier variable to do that
should it be in character or in each of the things... guess the former because it's so universal

i really don't like those strange errors:
	create_character(): Condition "!valid" is true. Continuing.
	and it often complains about infinite recursion where there is no recursion! - https://github.com/godotengine/godot/issues/76019

1) seems like using move_and_collide(velocity * delta) is better then slide
2) characters are moving when you dash through them because they are not agreeing to server calculations - will be fixed when we move input to server

todo: check what multiplayer.server_relay is and enable it if needed

ok, another set of goals achieved, congrats to everyone.
game is not playable though, it feels like... simply bad?
i think we need to work on weapon and enemies next.
I guess it would be easier to steal some ranged weapon mechanics, but on the other hand i believe that short range weapons should be priority...
At least I am quite sure i need to rework applying damage with instant shapecasts.

Next plan:
	1) instant damage
